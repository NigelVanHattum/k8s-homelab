## Create default user through docker entrypoint
## Defaults indicated below
##
adminUser:
  organization: "influxdata"
  bucket: "default"
  user: ${adminUser}
  retention_policy: "0s"
  ## Leave empty to generate a random password and token.
  ## Or fill any of these values to use fixed values.
  # password: ""
  # token: ""

  ## The password and token are obtained from an existing secret. The expected
  ## keys are `admin-password` and `admin-token`.
  ## If set, the password and token values above are ignored.
  existingSecret: ${existingSecret}

## Persist data to a persistent volume
##
persistence:
  enabled: true
  ## If true will use an existing PVC instead of creating one
  # useExisting: false
  ## Name of existing PVC to be used in the influx deployment
  # name:
  ## influxdb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ${storageClass}
  accessMode: ReadWriteOnce
  size: 32Gi

ingress:
  enabled: true
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  className: traefik
  # secretName: my-tls-cert # only needed if tls above is true or default certificate is not configured for Nginx
  hostname: influxdb.local.nigelvanhattum.nl
  annotations: {
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    }
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
  path: /